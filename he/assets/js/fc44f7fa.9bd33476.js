"use strict";(self.webpackChunkdocusaurus_guides=self.webpackChunkdocusaurus_guides||[]).push([[3664],{735:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>t,metadata:()=>c,toc:()=>l});const c=JSON.parse('{"id":"programming/devops/docker/avoiding-architecture-mismatch","title":"Avoiding Docker Architecture Mismatch","description":"1. The Problem: Building on macOS for Linux Deployment","source":"@site/docs/programming/devops/docker/avoiding-architecture-mismatch.md","sourceDirName":"programming/devops/docker","slug":"/programming/devops/docker/avoiding-architecture-mismatch","permalink":"/guides/he/docs/programming/devops/docker/avoiding-architecture-mismatch","draft":false,"unlisted":false,"editUrl":"https://github.com/talkohavy/guides/docs/programming/devops/docker/avoiding-architecture-mismatch.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mySidebar","previous":{"title":"- How to Create a Dockerfile","permalink":"/guides/he/docs/programming/devops/docker/how-to-create-a-dockerfile"},"next":{"title":"- Docker Compose Commands","permalink":"/guides/he/docs/programming/devops/docker/docker-compose-commands"}}');var i=o(5813),n=o(3546);const t={},a="Avoiding Docker Architecture Mismatch",s={},l=[{value:"1. The Problem: Building on macOS for Linux Deployment",id:"1-the-problem-building-on-macos-for-linux-deployment",level:2},{value:"2. Quick Solution: Always Specify the Target Platform",id:"2-quick-solution-always-specify-the-target-platform",level:2},{value:"3. How to Spot Architecture Mismatch Problems",id:"3-how-to-spot-architecture-mismatch-problems",level:2},{value:"1. Error Messages",id:"1-error-messages",level:3},{value:"2. Check Your Image Architecture",id:"2-check-your-image-architecture",level:3},{value:"3. Check Your Host Architecture",id:"3-check-your-host-architecture",level:3},{value:"4. Practical Workflow for macOS \u2192 Linux Deployment",id:"4-practical-workflow-for-macos--linux-deployment",level:2},{value:"Local Development",id:"local-development",level:3},{value:"Building for Production",id:"building-for-production",level:3}];function d(e){const r={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"avoiding-docker-architecture-mismatch",children:"Avoiding Docker Architecture Mismatch"})}),"\n",(0,i.jsx)(r.h2,{id:"1-the-problem-building-on-macos-for-linux-deployment",children:"1. The Problem: Building on macOS for Linux Deployment"}),"\n",(0,i.jsx)(r.p,{children:"If you're developing on macOS (ARM64 or Intel) but deploying to Linux servers, you need to be aware of architecture mismatches. By default, Docker builds images for your host architecture, which can cause issues when deploying."}),"\n",(0,i.jsx)(r.h2,{id:"2-quick-solution-always-specify-the-target-platform",children:"2. Quick Solution: Always Specify the Target Platform"}),"\n",(0,i.jsx)(r.p,{children:"The simplest fix is to always build for Linux when you plan to deploy on Linux servers:"}),"\n",(0,i.jsx)(r.p,{children:"Instead of doing this (which builds for your local architecture):"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"# \u274c\ndocker build -t myapp .\n"})}),"\n",(0,i.jsx)(r.p,{children:"Do this (build specifically for Linux x86_64):"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"# \u2705\ndocker build --platform linux/amd64 -t myapp .\n"})}),"\n",(0,i.jsx)(r.h2,{id:"3-how-to-spot-architecture-mismatch-problems",children:"3. How to Spot Architecture Mismatch Problems"}),"\n",(0,i.jsx)(r.h3,{id:"1-error-messages",children:"1. Error Messages"}),"\n",(0,i.jsx)(r.p,{children:"When you try to run an image built for the wrong architecture, you'll see errors like:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"# On Linux server trying to run ARM64 image:\nexec /usr/local/bin/docker-entrypoint.sh: exec format error\n\n# Or:\nstandard_init_linux.go:228: exec user process caused: exec format error\n"})}),"\n",(0,i.jsx)(r.h3,{id:"2-check-your-image-architecture",children:"2. Check Your Image Architecture"}),"\n",(0,i.jsx)(r.p,{children:"You can inspect what architecture your image was built for:"}),"\n",(0,i.jsx)(r.p,{children:"Check the architecture of an image"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"docker image inspect myapp:latest | grep Architecture\n"})}),"\n",(0,i.jsx)(r.h3,{id:"3-check-your-host-architecture",children:"3. Check Your Host Architecture"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"uname -m\n"})}),"\n",(0,i.jsxs)(r.p,{children:["On macOS it would output: ",(0,i.jsx)(r.em,{children:"arm64 (Apple Silicon) or x86_64 (Intel Mac)"}),(0,i.jsx)(r.br,{}),"\n","On Linux it would output: ",(0,i.jsx)(r.em,{children:"x86_64, aarch64, etc"})]}),"\n",(0,i.jsx)(r.h2,{id:"4-practical-workflow-for-macos--linux-deployment",children:"4. Practical Workflow for macOS \u2192 Linux Deployment"}),"\n",(0,i.jsx)(r.h3,{id:"local-development",children:"Local Development"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"# Build for local testing (matches your Mac's architecture)\ndocker build -t myapp:local .\n\n# Run locally for development\ndocker run myapp:local\n"})}),"\n",(0,i.jsx)(r.h3,{id:"building-for-production",children:"Building for Production"}),"\n",(0,i.jsx)(r.p,{children:"Build specifically for Linux deployment:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"docker build --platform linux/amd64 -t myapp:prod .\n"})}),"\n",(0,i.jsx)(r.p,{children:"Push to registry (most CI/CD systems run on Linux x86_64):"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"docker push myapp:prod\n"})})]})}function u(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},3546:(e,r,o)=>{o.d(r,{R:()=>t,x:()=>a});var c=o(9729);const i={},n=c.createContext(i);function t(e){const r=c.useContext(n);return c.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),c.createElement(n.Provider,{value:r},e.children)}}}]);