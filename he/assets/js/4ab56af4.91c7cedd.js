"use strict";(self.webpackChunkdocusaurus_guides=self.webpackChunkdocusaurus_guides||[]).push([[2136],{3600:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"programming/databases/postgres-sql","title":"Guide For Postgres SQL","description":"1. Getting Started","source":"@site/docs/programming/databases/postgres-sql.md","sourceDirName":"programming/databases","slug":"/programming/databases/postgres-sql","permalink":"/guides/he/docs/programming/databases/postgres-sql","draft":false,"unlisted":false,"editUrl":"https://github.com/talkohavy/guides/docs/programming/databases/postgres-sql.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mySidebar","previous":{"title":"- MongoDB","permalink":"/guides/he/docs/programming/databases/mongodb"},"next":{"title":"- Redis","permalink":"/guides/he/docs/programming/databases/redis"}}');var l=s(6070),r=s(7010);const d={},o="Guide For Postgres SQL",c={},t=[{value:"1. Getting Started",id:"1-getting-started",level:2},{value:"2. A Full Connection Flow",id:"2-a-full-connection-flow",level:2},{value:"<strong>Step 1: Read Environment Variables</strong>",id:"step-1-read-environment-variables",level:4},{value:"<strong>Step 2: Parse Command-Line Arguments</strong>",id:"step-2-parse-command-line-arguments",level:4},{value:"<strong>Step 3: Reads Configuration Files</strong>",id:"step-3-reads-configuration-files",level:4},{value:"<strong>Step 4: Connects to PostgreSQL</strong>",id:"step-4-connects-to-postgresql",level:4},{value:"<strong>Step 5: Launches the Interactive CLI</strong>",id:"step-5-launches-the-interactive-cli",level:4},{value:"<strong>Step 6: Session Management &amp; History</strong>",id:"step-6-session-management--history",level:4},{value:"<strong>Step 7: Closing the Session</strong>",id:"step-7-closing-the-session",level:4},{value:"3. CLI Commands",id:"3-cli-commands",level:2},{value:"- Command 1: <code>psql</code> - connect to database",id:"--command-1-psql---connect-to-database",level:3},{value:"- Command 2: <code>psql --list</code> - list all databases",id:"--command-2-psql---list---list-all-databases",level:3},{value:"4. Interactive Shell Commands",id:"4-interactive-shell-commands",level:2},{value:"- Command 0: Show help menu",id:"--command-0-show-help-menu",level:3},{value:"- Command 1: Show connection info",id:"--command-1-show-connection-info",level:3},{value:"- Command 2: Lists server configuration",id:"--command-2-lists-server-configuration",level:3},{value:"- Command 3: Change user password",id:"--command-3-change-user-password",level:3},{value:"- Command 4: Close Connection/Terminal",id:"--command-4-close-connectionterminal",level:3},{value:"- Command 5: List of roles",id:"--command-5-list-of-roles",level:3},{value:"- Command 6: List all databases",id:"--command-6-list-all-databases",level:3},{value:"- Command 7: List all tables",id:"--command-7-list-all-tables",level:3},{value:"- Command 8: Show details on a table",id:"--command-8-show-details-on-a-table",level:3},{value:"- Command 9: List all functions",id:"--command-9-list-all-functions",level:3},{value:"- Command 10: Switch to a different database",id:"--command-10-switch-to-a-different-database",level:3},{value:"- Command 11: Get/Set Output Variables",id:"--command-11-getset-output-variables",level:3},{value:"- Option 1: border",id:"--option-1-border",level:4},{value:"- Option 2: format",id:"--option-2-format",level:4},{value:"- Option 3: linestyle",id:"--option-3-linestyle",level:4},{value:"- Option 4: unicode_border_linestyle",id:"--option-4-unicode_border_linestyle",level:4},{value:"- Option 5: unicode_header_linestyle",id:"--option-5-unicode_header_linestyle",level:4},{value:"- Option 6: null",id:"--option-6-null",level:4},{value:"- Option 7: title",id:"--option-7-title",level:4},{value:"- Command: 12: Execute query from a <code>file</code>",id:"--command-12-execute-query-from-a-file",level:3},{value:"- Command: 13: Show/Edit code of Function or Stored-Procedure",id:"--command-13-showedit-code-of-function-or-stored-procedure",level:3},{value:"- Command: 14: Bind values to placeholders",id:"--command-14-bind-values-to-placeholders",level:3},{value:"- Other notable commands",id:"--other-notable-commands",level:3}];function a(e){const n={admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"guide-for-postgres-sql",children:"Guide For Postgres SQL"})}),"\n",(0,l.jsx)(n.h2,{id:"1-getting-started",children:"1. Getting Started"}),"\n",(0,l.jsx)(n.p,{children:"Installing postgresql on macOS (using Homebrew):"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"brew install postgresql\n"})}),"\n",(0,l.jsx)(n.p,{children:"Then start the service:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"brew services start postgresql\n"})}),"\n",(0,l.jsxs)(n.p,{children:["The next command should ",(0,l.jsx)(n.strong,{children:"fail"})," for you:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"psql\n"})}),"\n",(0,l.jsx)(n.p,{children:"by saying something like:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'psql: error: connection to server on socket "/tmp/.s.PGSQL.5432" failed: FATAL:  database "talkohavy" does not exist\n'})}),"\n",(0,l.jsxs)(n.p,{children:["That's because installing ",(0,l.jsx)(n.code,{children:"postgresql"})," using brew creates a database named ",(0,l.jsx)(n.code,{children:"postgres"}),".\nNow, try running:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"psql postgres\n"})}),"\n",(0,l.jsxs)(n.p,{children:["and you'll be logged in! \ud83d\ude42",(0,l.jsx)(n.br,{}),"\n","You'll see something like:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'psql (14.13 (Homebrew))\nType "help" for help.\n\npostgres=#\n'})}),"\n",(0,l.jsx)(n.p,{children:"Let's list all the available databases to prove postgres is one of them:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"\\list\n"})}),"\n",(0,l.jsx)(n.p,{children:"or:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"\\l\n"})}),"\n",(0,l.jsx)(n.p,{children:"for short."}),"\n",(0,l.jsx)(n.p,{children:"You should see something like:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"                              List of databases\n   Name    |   Owner   | Encoding | Collate | Ctype |    Access privileges\n-----------+-----------+----------+---------+-------+-------------------------\n postgres  | talkohavy | UTF8     | C       | C     |\n template0 | talkohavy | UTF8     | C       | C     | =c/talkohavy           +\n           |           |          |         |       | talkohavy=CTc/talkohavy\n template1 | talkohavy | UTF8     | C       | C     | =c/talkohavy           +\n           |           |          |         |       | talkohavy=CTc/talkohavy\n(3 rows)\n"})}),"\n",(0,l.jsx)(n.p,{children:"Let's create a database for your machine name:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"CREATE DATABASE talkohavy;\n"})}),"\n",(0,l.jsx)(n.p,{children:"List out your databases again to see that it was actually created:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"\\list\n"})}),"\n",(0,l.jsx)(n.p,{children:"Now, you should be able to connect to your newly created aaa database with:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"psql talkohavy\n"})}),"\n",(0,l.jsx)(n.admonition,{type:"tip",children:(0,l.jsxs)(n.p,{children:["if the ",(0,l.jsx)(n.strong,{children:"name of your new database"})," is similar to ",(0,l.jsx)(n.strong,{children:"your machine username"}),", then you can simply type ",(0,l.jsx)(n.code,{children:"psql"})," for short:"]})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"psql\n"})}),"\n",(0,l.jsx)(n.p,{children:"Let's create our first table now:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE words (\n    id SERIAL PRIMARY KEY,\n    spelling VARCHAR(255),  -- or use TEXT for longer strings\n    score INT CHECK (score >= 0 AND score <= 100)\n);\n"})}),"\n",(0,l.jsx)(n.p,{children:'Let\'s add a few records to the new "words" table:'}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"INSERT INTO words (word, score) VALUES\n('Hello world', 10),\n('PostgreSQL is great', 20),\n('Database management', 30),\n('Learning SQL', 40);\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"2-a-full-connection-flow",children:"2. A Full Connection Flow"}),"\n",(0,l.jsxs)(n.p,{children:["Here is what's happening behind the scenes when you run the command of ",(0,l.jsx)(n.code,{children:"psql"}),":"]}),"\n",(0,l.jsx)(n.h4,{id:"step-1-read-environment-variables",children:(0,l.jsx)(n.strong,{children:"Step 1: Read Environment Variables"})}),"\n",(0,l.jsxs)(n.p,{children:["Before connecting, ",(0,l.jsx)(n.code,{children:"psql"})," checks ",(0,l.jsx)(n.strong,{children:"environment variables"})," that define connection details. The most common ones are:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"PGHOST"})," \u2013 The database server\u2019s hostname (default: localhost)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"PGPORT"})," \u2013 The port number (default: 5432)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"PGUSER"})," \u2013 The username to connect with"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"PGDATABASE"})," \u2013 The database name to connect to"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"PGPASSWORD"})," \u2013 The password (not recommended for security reasons)"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"You can check these values using:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"env | grep PG\n"})}),"\n",(0,l.jsx)(n.h4,{id:"step-2-parse-command-line-arguments",children:(0,l.jsx)(n.strong,{children:"Step 2: Parse Command-Line Arguments"})}),"\n",(0,l.jsxs)(n.p,{children:["If you specify options, ",(0,l.jsx)(n.code,{children:"psql"})," parses them:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"psql -U myuser -d mydatabase -h myhost -p 5432\n"})}),"\n",(0,l.jsx)(n.p,{children:"This is equivalent to setting environment variables manually."}),"\n",(0,l.jsx)(n.h4,{id:"step-3-reads-configuration-files",children:(0,l.jsx)(n.strong,{children:"Step 3: Reads Configuration Files"})}),"\n",(0,l.jsxs)(n.p,{children:["Before launching the interactive shell, ",(0,l.jsx)(n.code,{children:"psql"})," checks for a user-specific configuration file (if exists) at:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"cat ~/.psqlrc\n"})}),"\n",(0,l.jsx)(n.p,{children:"Or..."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"cat /opt/homebrew/var/postgresql@14/postgresql.conf\n"})}),"\n",(0,l.jsx)(n.h4,{id:"step-4-connects-to-postgresql",children:(0,l.jsx)(n.strong,{children:"Step 4: Connects to PostgreSQL"})}),"\n",(0,l.jsxs)(n.p,{children:["Once all parameters are set, ",(0,l.jsx)(n.code,{children:"psql"})," attempts to establish a connection to the PostgreSQL server:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.code,{children:"PGHOST=localhost"}),", it tries a ",(0,l.jsx)(n.strong,{children:"Unix domain socket"})," at:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"/tmp/.s.PGSQL.5432\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["If a remote host is specified, it connects via ",(0,l.jsx)(n.strong,{children:"TCP/IP"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["If authentication is required, ",(0,l.jsx)(n.code,{children:"psql"}),":"]}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Checks for stored passwords in ",(0,l.jsx)(n.code,{children:"~/.pgpass"})," (if it exists)."]}),"\n",(0,l.jsx)(n.li,{children:"Prompts the user for a password if needed."}),"\n",(0,l.jsxs)(n.li,{children:["Follows authentication rules in ",(0,l.jsx)(n.code,{children:"pg_hba.conf"})," on the server."]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"step-5-launches-the-interactive-cli",children:(0,l.jsx)(n.strong,{children:"Step 5: Launches the Interactive CLI"})}),"\n",(0,l.jsxs)(n.p,{children:["If the connection is successful, you enter the ",(0,l.jsx)(n.code,{children:"psql"})," interactive shell, which:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Displays a welcome message with connection details."}),"\n",(0,l.jsxs)(n.li,{children:["Waits for SQL commands or ",(0,l.jsx)(n.code,{children:"\\"})," meta-commands (like ",(0,l.jsx)(n.code,{children:"\\dt"})," for tables)."]}),"\n",(0,l.jsx)(n.li,{children:"Reads commands, sends them to the PostgreSQL server, and displays results."}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"step-6-session-management--history",children:(0,l.jsx)(n.strong,{children:"Step 6: Session Management & History"})}),"\n",(0,l.jsx)(n.p,{children:"Every valid command is logged in:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"cat ~/.psql_history\n"})}),"\n",(0,l.jsx)(n.h4,{id:"step-7-closing-the-session",children:(0,l.jsx)(n.strong,{children:"Step 7: Closing the Session"})}),"\n",(0,l.jsxs)(n.p,{children:["Typing ",(0,l.jsx)(n.code,{children:"\\q"})," or pressing ",(0,l.jsx)(n.code,{children:"Ctrl+D"})," exits ",(0,l.jsx)(n.code,{children:"psql"}),".\nThe session history is saved for the next time you use ",(0,l.jsx)(n.code,{children:"psql"}),"."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"3-cli-commands",children:"3. CLI Commands"}),"\n",(0,l.jsxs)(n.h3,{id:"--command-1-psql---connect-to-database",children:["- Command 1: ",(0,l.jsx)(n.code,{children:"psql"})," - connect to database"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"psql [option...] [dbname [username]]\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Description:"})}),"\n",(0,l.jsx)(n.p,{children:"Connects to a database."}),"\n",(0,l.jsx)(n.p,{children:"When you run psql without specifying any flags, it attempts to connect using the following default values:"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Setting"}),(0,l.jsx)(n.th,{children:"Default Value"}),(0,l.jsx)(n.th,{children:"How to Override"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:["User (",(0,l.jsx)(n.code,{children:"-U"}),")"]}),(0,l.jsxs)(n.td,{children:["Your system username (",(0,l.jsx)(n.code,{children:"$USER"}),")"]}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"PGUSER=username"})," or ",(0,l.jsx)(n.code,{children:"psql -U username"})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:["Database (",(0,l.jsx)(n.code,{children:"-d"}),")"]}),(0,l.jsx)(n.td,{children:"Same as the username"}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"PGDATABASE=dbname"})," or ",(0,l.jsx)(n.code,{children:"psql -d dbname"})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:["Host (",(0,l.jsx)(n.code,{children:"-h"}),")"]}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"localhost"})," (Unix socket)"]}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"PGHOST=hostname"})," or ",(0,l.jsx)(n.code,{children:"psql -h hostname"})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:["Port (",(0,l.jsx)(n.code,{children:"-p"}),")"]}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"5432"})," (default PostgreSQL port)"]}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"PGPORT=port"})," or ",(0,l.jsx)(n.code,{children:"psql -p port"})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Connection Method"}),(0,l.jsxs)(n.td,{children:["Unix domain socket (",(0,l.jsx)(n.code,{children:"/tmp/.s.PGSQL.5432"}),")"]}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"PGHOST=127.0.0.1"})," forces TCP/IP"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Password"}),(0,l.jsx)(n.td,{children:"No password prompt (if not required)"}),(0,l.jsxs)(n.td,{children:["If needed, prompted or stored in ",(0,l.jsx)(n.code,{children:"~/.pgpass"})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"SSL"}),(0,l.jsxs)(n.td,{children:["Depends on ",(0,l.jsx)(n.code,{children:"sslmode"})," (",(0,l.jsx)(n.code,{children:"prefer"})," by default)"]}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"PGSSLMODE=disable"})," or ",(0,l.jsx)(n.code,{children:'psql "sslmode=require"'})]})]})]})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"psql -U talkohavy -d talkohavy -h localhost -p 5432 -E\n"})}),"\n",(0,l.jsx)(n.p,{children:"Mentioned above are the defaults \u261d\ud83c\udffc"}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.h3,{id:"--command-2-psql---list---list-all-databases",children:["- Command 2: ",(0,l.jsx)(n.code,{children:"psql --list"})," - list all databases"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"psql --list\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Description:"})}),"\n",(0,l.jsx)(n.p,{children:"List available databases, then exit."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"4-interactive-shell-commands",children:"4. Interactive Shell Commands"}),"\n",(0,l.jsx)(n.h3,{id:"--command-0-show-help-menu",children:"- Command 0: Show help menu"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The Command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\?\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Description:"})}),"\n",(0,l.jsx)(n.p,{children:"Shows help information."}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h3,{id:"--command-1-show-connection-info",children:"- Command 1: Show connection info"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The Command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\conninfo\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Description:"})}),"\n",(0,l.jsx)(n.p,{children:"Outputs information about the current connection. Details like:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"current database name"}),"\n",(0,l.jsx)(n.li,{children:"current port number"}),"\n",(0,l.jsx)(n.li,{children:"current user name"}),"\n",(0,l.jsx)(n.li,{children:"connection type"}),"\n"]}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h3,{id:"--command-2-lists-server-configuration",children:"- Command 2: Lists server configuration"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The Command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\dconfig[+] *\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Description:"})}),"\n",(0,l.jsx)(n.p,{children:"Lists server configuration parameters and their values."}),"\n",(0,l.jsxs)(n.p,{children:["Common use is: ",(0,l.jsx)(n.code,{children:"\\dconfig *"})]}),"\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.code,{children:"pattern"})," is specified, only parameters whose names match the ",(0,l.jsx)(n.code,{children:"pattern"})," are listed. Without a ",(0,l.jsx)(n.code,{children:"pattern"}),", only parameters that are set to non-default values are listed. (Use ",(0,l.jsx)(n.code,{children:"\\dconfig *"})," to see all parameters.) If ",(0,l.jsx)(n.code,{children:"+"})," is appended to the command name, each parameter is listed with its data type, context in which the parameter can be set, and access privileges (if non-default access privileges have been granted)."]}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h3,{id:"--command-3-change-user-password",children:"- Command 3: Change user password"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\password USERNAME\n"})}),"\n",(0,l.jsx)(n.p,{children:"Set a password for user USERNAME."}),"\n",(0,l.jsx)(n.p,{children:"You'll be prompted to enter a new password and confirm it."}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h3,{id:"--command-4-close-connectionterminal",children:"- Command 4: Close Connection/Terminal"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\q\n"})}),"\n",(0,l.jsx)(n.p,{children:"Or..."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"ctrl+D\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Quit the ",(0,l.jsx)(n.code,{children:"postgresql"})," terminal."]}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h3,{id:"--command-5-list-of-roles",children:"- Command 5: List of roles"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The Command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\dg[+]\n"})}),"\n",(0,l.jsx)(n.p,{children:"Or..."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\du\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Description:"})}),"\n",(0,l.jsx)(n.p,{children:"List out all roles (users) and their associated attributes, such as whether they have superuser privileges, can create databases, or can create new roles."}),"\n",(0,l.jsxs)(n.p,{children:['Since the concepts of "users" and "groups" have been unified into "roles", this command is now equivalent to ',(0,l.jsx)(n.code,{children:"\\du"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["By default, ",(0,l.jsx)(n.strong,{children:"only user-created roles are shown"}),"; Use the ",(0,l.jsx)(n.code,{children:"S"})," option to ",(0,l.jsx)(n.strong,{children:"include system roles"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["If the form ",(0,l.jsx)(n.code,{children:"\\dg+"})," is used, additional information is shown about each role; currently this adds the comment for each role."]}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h3,{id:"--command-6-list-all-databases",children:"- Command 6: List all databases"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The Command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\l[+]\n"})}),"\n",(0,l.jsx)(n.p,{children:"Or..."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\list[+]\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Description:"})}),"\n",(0,l.jsx)(n.p,{children:"List the databases in the server."}),"\n",(0,l.jsx)(n.p,{children:"Lists the databases and show their:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"names"}),"\n",(0,l.jsx)(n.li,{children:"owners"}),"\n",(0,l.jsx)(n.li,{children:"character set encodings"}),"\n",(0,l.jsx)(n.li,{children:"access privileges"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.code,{children:"+"})," option is used, it also displays:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"database sizes"}),"\n",(0,l.jsx)(n.li,{children:"default tablespaces"}),"\n",(0,l.jsx)(n.li,{children:"descriptions"}),"\n"]}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h3,{id:"--command-7-list-all-tables",children:"- Command 7: List all tables"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The Command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\dt[S+]\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Description:"})}),"\n",(0,l.jsx)(n.p,{children:"List all user-defined tables."}),"\n",(0,l.jsxs)(n.p,{children:["Add the ",(0,l.jsx)(n.code,{children:"S"})," option to have ",(0,l.jsx)(n.strong,{children:"system objects"})," be shown as well."]}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h3,{id:"--command-8-show-details-on-a-table",children:"- Command 8: Show details on a table"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The Command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\d table_name\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Description:"})}),"\n",(0,l.jsx)(n.p,{children:"This will show you information about a table's columns:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"a column's name"}),"\n",(0,l.jsx)(n.li,{children:"a column's type"}),"\n",(0,l.jsx)(n.li,{children:"is it nullable"}),"\n",(0,l.jsx)(n.li,{children:"a column's default value (if a default even exists)"}),"\n",(0,l.jsx)(n.li,{children:"the table's primary key"}),"\n",(0,l.jsx)(n.li,{children:"all indexes defined on the table"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["You can add a ",(0,l.jsx)(n.code,{children:"+"})," sign, an ",(0,l.jsx)(n.code,{children:"S"})," char right after ",(0,l.jsx)(n.code,{children:"\\d"})," (no space), to get some extra information."]}),"\n",(0,l.jsx)(n.admonition,{type:"info",children:(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.code,{children:"\\d"})," is used without a pattern argument, it is equivalent to ",(0,l.jsx)(n.code,{children:"\\dtvmsE"})," which will show a list of all visible tables, views, materialized views, sequences and foreign tables. This is purely a convenience measure."]})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h3,{id:"--command-9-list-all-functions",children:"- Command 9: List all functions"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The Command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\df\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Description:"})}),"\n",(0,l.jsx)(n.p,{children:"Lists functions"}),"\n",(0,l.jsx)(n.p,{children:"Also display their:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"result data types"}),"\n",(0,l.jsx)(n.li,{children:"argument data types"}),"\n",(0,l.jsx)(n.li,{children:'function types, which are classified as "agg" (aggregate), "normal", "procedure", "trigger", or "window".'}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["To display only functions of specific type(s), add the corresponding letters ",(0,l.jsx)(n.code,{children:"a"}),", ",(0,l.jsx)(n.code,{children:"n"}),", ",(0,l.jsx)(n.code,{children:"p"}),", ",(0,l.jsx)(n.code,{children:"t"}),", or ",(0,l.jsx)(n.code,{children:"w"})," to the command."]}),"\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.code,{children:"pattern"})," is specified, only functions whose names match the pattern are shown."]}),"\n",(0,l.jsxs)(n.p,{children:["Add the ",(0,l.jsx)(n.code,{children:"S"})," option to also show ",(0,l.jsx)(n.strong,{children:"system objects"}),", and not only user-created objects."]}),"\n",(0,l.jsxs)(n.p,{children:["If the form ",(0,l.jsx)(n.code,{children:"\\df+"})," is used, additional information about each function is shown, including volatility, parallel safety, owner, security classification, access privileges, language, and description."]}),"\n",(0,l.jsxs)(n.p,{children:["Source code for a specific function can be seen using ",(0,l.jsx)(n.code,{children:"\\sf"}),"."]}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h3,{id:"--command-10-switch-to-a-different-database",children:"- Command 10: Switch to a different database"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The Command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\c DATABASE_NAME\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Description:"})}),"\n",(0,l.jsx)(n.p,{children:"Switch to a different database on your server."}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"\\c"})," used by itself establishes a new connection to a PostgreSQL server. It uses the same params as the current connection, and terminates the existing connection."]}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h3,{id:"--command-11-getset-output-variables",children:"- Command 11: Get/Set Output Variables"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The Command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\pset\n"})}),"\n",(0,l.jsx)(n.p,{children:"And:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\pset option\n"})}),"\n",(0,l.jsx)(n.p,{children:"And:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\pset option value\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Description:"})}),"\n",(0,l.jsxs)(n.p,{children:["This command can ",(0,l.jsx)(n.strong,{children:"get or set options affecting the output"})," of query result tables."]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Calling ",(0,l.jsx)(n.code,{children:"\\pset"})," without any arguments ",(0,l.jsx)(n.strong,{children:"displays the current status of all printing options"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Calling ",(0,l.jsx)(n.code,{children:"\\pset option"})," on:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"boolean options, causes the option to be toggled or unset."}),"\n",(0,l.jsx)(n.li,{children:"non-boolean options, get the value currently set fot that option."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Calling ",(0,l.jsx)(n.code,{children:"\\pset option value"}),", assigned ",(0,l.jsx)(n.em,{children:"value"})," to ",(0,l.jsx)(n.em,{children:"option"}),". The semantics of ",(0,l.jsx)(n.em,{children:"value"})," vary depending on the selected ",(0,l.jsx)(n.em,{children:"option"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"--option-1-border",children:"- Option 1: border"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Default:"})," 1"]}),"\n",(0,l.jsx)(n.p,{children:"Should be a number. Mostly 0 or 1 is what affects more formats, but in html the higher the number the bolder the border."}),"\n",(0,l.jsx)(n.h4,{id:"--option-2-format",children:"- Option 2: format"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Default:"})," ",(0,l.jsx)(n.code,{children:"aligned"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Options are: ",(0,l.jsx)(n.code,{children:"aligned"}),", ",(0,l.jsx)(n.code,{children:"asciidoc"}),", ",(0,l.jsx)(n.code,{children:"csv"}),", ",(0,l.jsx)(n.code,{children:"html"}),", ",(0,l.jsx)(n.code,{children:"latex"}),", ",(0,l.jsx)(n.code,{children:"latex-longtable"}),", ",(0,l.jsx)(n.code,{children:"troff-ms"}),", ",(0,l.jsx)(n.code,{children:"unaligned"}),", or ",(0,l.jsx)(n.code,{children:"wrapped"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"--option-3-linestyle",children:"- Option 3: linestyle"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Default:"})," ",(0,l.jsx)(n.code,{children:"ascii"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Options are: ",(0,l.jsx)(n.code,{children:"ascii"})," | ",(0,l.jsx)(n.code,{children:"unicode"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"unicode"})," value can receive border values of: ",(0,l.jsx)(n.code,{children:"0"}),", ",(0,l.jsx)(n.code,{children:"1"}),", ",(0,l.jsx)(n.code,{children:"2"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"--option-4-unicode_border_linestyle",children:"- Option 4: unicode_border_linestyle"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Default:"})," ",(0,l.jsx)(n.code,{children:"single"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Option are: ",(0,l.jsx)(n.code,{children:"single"})," | ",(0,l.jsx)(n.code,{children:"double"}),"."]}),"\n",(0,l.jsx)(n.p,{children:"Sets the border drawing style for the unicode line style."}),"\n",(0,l.jsx)(n.h4,{id:"--option-5-unicode_header_linestyle",children:"- Option 5: unicode_header_linestyle"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Default:"})," ",(0,l.jsx)(n.code,{children:"single"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Option are: ",(0,l.jsx)(n.code,{children:"single"})," | ",(0,l.jsx)(n.code,{children:"double"}),"."]}),"\n",(0,l.jsx)(n.p,{children:"Sets the header drawing style for the unicode line style."}),"\n",(0,l.jsx)(n.h4,{id:"--option-6-null",children:"- Option 6: null"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Default:"})," ",(0,l.jsx)(n.code,{children:"ascii"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Sets the string to be printed in place of a null value. The default is to print nothing, which can easily be mistaken for an empty string. For example, one might prefer ",(0,l.jsx)(n.code,{children:"\\pset null '(null)'"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"--option-7-title",children:"- Option 7: title"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Default:"})," ",(0,l.jsx)(n.code,{children:"empty string"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Give a table a Title.",(0,l.jsx)(n.br,{}),"\n","For example: ",(0,l.jsx)(n.code,{children:"\\pset title 'Score Overview'"})]}),"\n",(0,l.jsxs)(n.p,{children:["Note: there's a difference between ",(0,l.jsx)(n.code,{children:"'Score Overview'"})," and ",(0,l.jsx)(n.code,{children:'"Score Overview"'}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["In the latter, the ",(0,l.jsx)(n.code,{children:'"'})," would be shown, whereas in the former, it would not."]}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.h3,{id:"--command-12-execute-query-from-a-file",children:["- Command: 12: Execute query from a ",(0,l.jsx)(n.code,{children:"file"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The Command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"`\\i` or `\\include filename`\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Description:"})}),"\n",(0,l.jsxs)(n.p,{children:["Reads input from the file ",(0,l.jsx)(n.code,{children:"filename"})," and executes it."]}),"\n",(0,l.jsx)(n.admonition,{type:"tip",children:(0,l.jsxs)(n.p,{children:["If you want to see the lines on the screen as they are read you must set the variable ",(0,l.jsx)(n.code,{children:"ECHO"})," to ",(0,l.jsx)(n.code,{children:"all"}),"."]})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h3,{id:"--command-13-showedit-code-of-function-or-stored-procedure",children:"- Command: 13: Show/Edit code of Function or Stored-Procedure"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The Command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\sf function_name\n"})}),"\n",(0,l.jsx)(n.p,{children:"Or..."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\ef function_name\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Description:"})}),"\n",(0,l.jsx)(n.p,{children:"Shows code of a named function/procedure."}),"\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.code,{children:"+"})," is used, output lines are numbered."]}),"\n",(0,l.jsxs)(n.p,{children:["Regarding an ",(0,l.jsx)(n.strong,{children:"edit"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"If you quit the editor without saving, the statement is discarded."}),"\n",(0,l.jsxs)(n.li,{children:["If you save and exit the editor:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"if you added a semicolon to it, the updated command is executed immediately."}),"\n",(0,l.jsxs)(n.li,{children:["if not, it is redisplayed; type ",(0,l.jsx)(n.code,{children:";"})," or ",(0,l.jsx)(n.code,{children:"\\g"})," to send it, or ",(0,l.jsx)(n.code,{children:"\\r"})," to cancel."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h3,{id:"--command-14-bind-values-to-placeholders",children:"- Command: 14: Bind values to placeholders"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The Command:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\\bind [ parameter ]\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Description:"})}),"\n",(0,l.jsx)(n.p,{children:"Sets query parameters for the next query execution, with the specified parameters passed for any parameter placeholders ($1 etc.)."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"INSERT INTO tbl1 VALUES ($1, $2) \\bind 'first value' 'second value' \\g\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h3,{id:"--other-notable-commands",children:"- Other notable commands"}),"\n",(0,l.jsx)(n.p,{children:"Other notable meta-commands:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"\\! pwd"}),": Prints your ",(0,l.jsx)(n.strong,{children:"current working directory"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"\\di+"}),": Shows a list of all defined ",(0,l.jsx)(n.strong,{children:"indexes"})," defined on tables."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"\\dT"}),": Lists ",(0,l.jsx)(n.strong,{children:"data types"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"\\ev"}),": Edit a named view."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},7010:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>o});var i=s(758);const l={},r=i.createContext(l);function d(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);