"use strict";(self.webpackChunkdocusaurus_guides=self.webpackChunkdocusaurus_guides||[]).push([[4990],{3832:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>t});const l=JSON.parse('{"id":"programming/git","title":"Guide for Git","description":"- All paths to .gitconfig","source":"@site/docs/programming/git.md","sourceDirName":"programming","slug":"/programming/git","permalink":"/guides/he/docs/programming/git","draft":false,"unlisted":false,"editUrl":"https://github.com/talkohavy/guides/docs/programming/git.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mySidebar","previous":{"title":"- ELK Stack","permalink":"/guides/he/docs/programming/elk"},"next":{"title":"- Javascript","permalink":"/guides/he/docs/js"}}');var s=i(5813),c=i(3546);const r={},o="Guide for Git",a={},t=[{value:"- All paths to .gitconfig",id:"--all-paths-to-gitconfig",level:2},{value:"- <code>git-split-diffs</code>",id:"--git-split-diffs",level:2},{value:"- Command 1: remote",id:"--command-1-remote",level:2},{value:"- <code>remote</code>: List all remote urls",id:"--remote-list-all-remote-urls",level:2},{value:"- <code>remote</code>: Remove a remote by <code>name</code>",id:"--remote-remove-a-remote-by-name",level:2},{value:"- <code>remote</code>: Add new remote origin url",id:"--remote-add-new-remote-origin-url",level:2},{value:"- <code>remote</code>: Update current existing remote",id:"--remote-update-current-existing-remote",level:2},{value:"- Command 2: config",id:"--command-2-config",level:2},{value:"- <code>config</code>: Get current remote origin url",id:"--config-get-current-remote-origin-url",level:2},{value:"- <code>config</code>: Get/Set git user <code>name</code> &amp; <code>email</code>",id:"--config-getset-git-user-name--email",level:2},{value:"- <code>config</code>: Create an alias",id:"--config-create-an-alias",level:2},{value:"- <code>branch</code>: Rename a local branch",id:"--branch-rename-a-local-branch",level:2},{value:"- <code>branch</code>: Delete a local branch",id:"--branch-delete-a-local-branch",level:2},{value:"- <code>push</code>: Delete a remote branch",id:"--push-delete-a-remote-branch",level:2},{value:"- <code>checkout</code>: Reset 1 file",id:"--checkout-reset-1-file",level:2},{value:"- <code>checkout</code>: Branch out from an old commit",id:"--checkout-branch-out-from-an-old-commit",level:2},{value:"- <code>clean</code>: delete new files",id:"--clean-delete-new-files",level:2},{value:"- <code>commit</code>: amend wrong author",id:"--commit-amend-wrong-author",level:2}];function d(e){const n={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"guide-for-git",children:"Guide for Git"})}),"\n",(0,s.jsx)(n.h2,{id:"--all-paths-to-gitconfig",children:"- All paths to .gitconfig"}),"\n",(0,s.jsxs)(n.p,{children:["There are 3 Levels of ",(0,s.jsx)(n.code,{children:".gitconfig"}),": ",(0,s.jsx)(n.code,{children:"project"}),", ",(0,s.jsx)(n.code,{children:"global"})," & ",(0,s.jsx)(n.code,{children:"system"}),".",(0,s.jsx)(n.br,{}),"\n","The .gitconfig, on all operating machines, is found at:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# - Project Level\ncode .git/config\n\n# - Global Level\ncode ~/.gitconfig\n\n# - System Level (What about windows?)\ncode /etc/gitconfig\n"})}),"\n",(0,s.jsxs)(n.p,{children:["I always use the gitconfig in the ",(0,s.jsx)(n.code,{children:"global"})," level.",(0,s.jsx)(n.br,{}),"\n",'That\'s where I usually put my "globally" configs.',(0,s.jsx)(n.br,{}),"\n","So like ",(0,s.jsx)(n.code,{children:"user.name"}),", ",(0,s.jsx)(n.code,{children:"user.email"}),", all of my ",(0,s.jsx)(n.code,{children:"aliases"}),", the ",(0,s.jsx)(n.code,{children:"git-split-diffs"}),", etc."]}),"\n",(0,s.jsx)(n.p,{children:"As of today, here's how my .gitconfig looks:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"[alias]\n\tlogs = log --graph --oneline --decorate\n\tdf = diff HEAD\n\tck = checkout\n\tpop = stash pop\n\tapply = stash apply\n\tname = rev-parse --abbrev-ref HEAD\n\tunstage = restore --staged .\n\ts = status\n\tcomit = commit\n\tamend = commit --amend --no-edit\n[user]\n\tname = Tal Kohavy\n\temail = talkohavy@gmail.com\n[core]\n\tpager = git-split-diffs --color | less -RF\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"--git-split-diffs",children:["- ",(0,s.jsx)(n.code,{children:"git-split-diffs"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"git-split-diffs"})," is a very cool diff tool."]}),"\n",(0,s.jsx)(n.p,{children:"Get the the most powerful syntax highlighting git-diff in your terminal.\nIt is GitHub style, with split view (side by side)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'npm install -g git-split-diffs\n\ngit config --global core.pager "git-split-diffs --color | less -RFX"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Enable scrolling in the terminal:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'git config --global core.pager "git-split-diffs --color | less -+LFX"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Narrow terminals:"}),"\n",(0,s.jsxs)(n.p,{children:["Split diffs can be hard to read on narrow terminals, so we revert to unified diffs if we cannot fit two lines of ",(0,s.jsx)(n.code,{children:"min-line-width"})," on screen. This value is configurable:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git config --global split-diffs.min-line-width 40\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This defaults to ",(0,s.jsx)(n.code,{children:"80"}),", so screens below ",(0,s.jsx)(n.code,{children:"160"})," characters will display unified diffs. Set it to ",(0,s.jsx)(n.code,{children:"0"})," to always show split diffs."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"--command-1-remote",children:"- Command 1: remote"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"remote"})," sub-command has 3 useful sub-commands:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"add"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"remove"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"set-url"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"add"})," command fails when ",(0,s.jsx)(n.code,{children:"name"})," already exists.\nThe ",(0,s.jsx)(n.code,{children:"set-url"})," command fails when ",(0,s.jsx)(n.code,{children:"name"})," doesn't exist."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"set-url"})," command is useful in cases you made a typo on the ",(0,s.jsx)(n.code,{children:"URL"})," of some existing ",(0,s.jsx)(n.code,{children:"name"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"origin"})," is the default name of your remote git, and is selected by default when you run a ",(0,s.jsx)(n.code,{children:"git push"})," or ",(0,s.jsx)(n.code,{children:"git pull"}),". This means you're basically running ",(0,s.jsx)(n.code,{children:"git push origin"})," behind the scenes."]}),"\n",(0,s.jsx)(n.p,{children:"I will demonstrate some useful use-cases with it down below."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"--remote-list-all-remote-urls",children:["- ",(0,s.jsx)(n.code,{children:"remote"}),": List all remote urls"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git remote -v\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"--remote-remove-a-remote-by-name",children:["- ",(0,s.jsx)(n.code,{children:"remote"}),": Remove a remote by ",(0,s.jsx)(n.code,{children:"name"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git remote rm origin\n"})}),"\n",(0,s.jsx)(n.p,{children:"Or..."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git remote remove origin\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"--remote-add-new-remote-origin-url",children:["- ",(0,s.jsx)(n.code,{children:"remote"}),": Add new remote origin url"]}),"\n",(0,s.jsxs)(n.p,{children:["(provide a ",(0,s.jsx)(n.code,{children:"name"})," & a ",(0,s.jsx)(n.code,{children:"URL"}),". If ",(0,s.jsx)(n.code,{children:"name"})," already exists, throws an error)"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git remote add origin PASTE_URL_HERE\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"--remote-update-current-existing-remote",children:["- ",(0,s.jsx)(n.code,{children:"remote"}),": Update current existing remote"]}),"\n",(0,s.jsx)(n.p,{children:"You'll need to provide 2 things:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["a ",(0,s.jsx)(n.code,{children:"name"})]}),"\n",(0,s.jsxs)(n.li,{children:["a new ",(0,s.jsx)(n.code,{children:"URL"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.code,{children:"name"})," doesn't exist, it throws an error."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git remote set-url origin PASTE_URL_HERE\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"--command-2-config",children:"- Command 2: config"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Description"})}),"\n",(0,s.jsxs)(n.p,{children:["You can use the config command to set up things like the ",(0,s.jsx)(n.code,{children:"user.name"}),", ",(0,s.jsx)(n.code,{children:"user.email"}),". And why should you care about the user & email? Because without a user & an email ",(0,s.jsx)(n.strong,{children:"you cannot perform commits"}),"!"]}),"\n",(0,s.jsxs)(n.h2,{id:"--config-get-current-remote-origin-url",children:["- ",(0,s.jsx)(n.code,{children:"config"}),": Get current remote origin url"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git config --get remote.origin.url\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"--config-getset-git-user-name--email",children:["- ",(0,s.jsx)(n.code,{children:"config"}),": Get/Set git user ",(0,s.jsx)(n.code,{children:"name"})," & ",(0,s.jsx)(n.code,{children:"email"})]}),"\n",(0,s.jsx)(n.p,{children:"Get:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# - Level 1: Project Level\ngit config --get user.name\ngit config --get user.email\n\n# - Level 2: Global Level\ngit config --global --get user.name\ngit config --global --get user.email\n\n# - Level 3: System Level\ngit config --system --get user.name\ngit config --system --get user.email\n"})}),"\n",(0,s.jsx)(n.p,{children:"Set:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# - Level 1: Project Level\ngit config user.name "Tal Kohavy"\ngit config user.email "talkohavy@gmail.com"\n\n# - Level 2: Global Level\ngit config --global user.name "Tal Kohavy"\ngit config --global user.email "talkohavy@gmail.com"\n\n# - Level 3: System Level\ngit config --system user.name "Tal Kohavy"\ngit config --system user.email "talkohavy@gmail.com"\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"--config-create-an-alias",children:["- ",(0,s.jsx)(n.code,{children:"config"}),": Create an alias"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'git config --global alias.logs "log --graph --oneline --decorate"\ngit logs\n\ngit config --global alias.ck "checkout"\ngit ck\n\ngit config --global alias.pop "stash pop"\ngit pop\n\ngit config --global alias.pop "stash apply"\ngit apply\n\ngit config --global alias.name "rev-parse --abbrev-ref HEAD"\ngit name\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"--branch-rename-a-local-branch",children:["- ",(0,s.jsx)(n.code,{children:"branch"}),": Rename a local branch"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git branch -m OLD_BRANCH_NAME NEW_BRANCH_NAME\n"})}),"\n",(0,s.jsx)(n.p,{children:"Or just..."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git branch -m NEW_BRANCH_NAME\n"})}),"\n",(0,s.jsx)(n.p,{children:"if you want to rename the branch you are currently on."}),"\n",(0,s.jsxs)(n.h2,{id:"--branch-delete-a-local-branch",children:["- ",(0,s.jsx)(n.code,{children:"branch"}),": Delete a local branch"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git branch --delete NAME_OF_BRANCH\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["You ",(0,s.jsx)(n.strong,{children:"can't"})," delete the branch on which you're current standing on!",(0,s.jsx)(n.br,{}),"\n","Check out from it if necessary."]})}),"\n",(0,s.jsxs)(n.h2,{id:"--push-delete-a-remote-branch",children:["- ",(0,s.jsx)(n.code,{children:"push"}),": Delete a remote branch"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git push origin :REMOTE_BRANCH_NAME\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"--checkout-reset-1-file",children:["- ",(0,s.jsx)(n.code,{children:"checkout"}),": Reset 1 file"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git checkout HEAD -- src/client.js\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"--checkout-branch-out-from-an-old-commit",children:["- ",(0,s.jsx)(n.code,{children:"checkout"}),": Branch out from an old commit"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git checkout -B BRANCH_NAME SHA_OF_COMMIT\n"})}),"\n",(0,s.jsx)(n.p,{children:"or..."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git checkout -B BRANCH_NAME HEAD~3\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"--clean-delete-new-files",children:["- ",(0,s.jsx)(n.code,{children:"clean"}),": delete new files"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clean -df\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"--commit-amend-wrong-author",children:["- ",(0,s.jsx)(n.code,{children:"commit"}),": amend wrong author"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'git commit --amend --author "Tal Kohavy <talkohavy@gmail.com>"\n'})})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},3546:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var l=i(9729);const s={},c=l.createContext(s);function r(e){const n=l.useContext(c);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),l.createElement(c.Provider,{value:n},e.children)}}}]);