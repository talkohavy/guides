"use strict";(self.webpackChunkdocusaurus_guides=self.webpackChunkdocusaurus_guides||[]).push([[6307],{5207:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"programming/devops/kubernetes/kubernetes-rbac","title":"K8S RBAC","description":"1. RBAC Model","source":"@site/docs/programming/devops/kubernetes/kubernetes-rbac.md","sourceDirName":"programming/devops/kubernetes","slug":"/programming/devops/kubernetes/kubernetes-rbac","permalink":"/guides/he/docs/programming/devops/kubernetes/kubernetes-rbac","draft":false,"unlisted":false,"editUrl":"https://github.com/talkohavy/guides/docs/programming/devops/kubernetes/kubernetes-rbac.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mySidebar","previous":{"title":"- Architecture and Concepts","permalink":"/guides/he/docs/programming/devops/kubernetes/architecture-and-concepts"},"next":{"title":"- Troubleshooting","permalink":"/guides/he/docs/programming/devops/kubernetes/troubleshooting"}}');var t=s(5813),r=s(3546);const o={},c="K8S RBAC",l={},d=[{value:"1. RBAC Model",id:"1-rbac-model",level:2},{value:"- The Goal",id:"--the-goal",level:3},{value:"- Identity, Roles &amp; Bindings",id:"--identity-roles--bindings",level:3},{value:"2. K8S Implementation of RBAC",id:"2-k8s-implementation-of-rbac",level:2},{value:"ServiceAccount = Identity",id:"serviceaccount--identity",level:3},{value:"Role = Role",id:"role--role",level:3},{value:"RoleBinding = Role binding",id:"rolebinding--role-binding",level:3},{value:"3. Example",id:"3-example",level:3},{value:"4. Modeling Access to Resources",id:"4-modeling-access-to-resources",level:3},{value:"5. Granting Permissions to Users",id:"5-granting-permissions-to-users",level:3}];function a(e){const n={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"k8s-rbac",children:"K8S RBAC"})}),"\n",(0,t.jsx)(n.h2,{id:"1-rbac-model",children:"1. RBAC Model"}),"\n",(0,t.jsx)(n.h3,{id:"--the-goal",children:"- The Goal"}),"\n",(0,t.jsx)(n.h3,{id:"--identity-roles--bindings",children:"- Identity, Roles & Bindings"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"2-k8s-implementation-of-rbac",children:"2. K8S Implementation of RBAC"}),"\n",(0,t.jsx)(n.p,{children:"Kubernetes also uses an RBAC model, to protect resources inside the cluster."}),"\n",(0,t.jsx)(n.p,{children:"It utilizes the same 3 concepts (identities, roles & binding) but calls them by slightly different names."}),"\n",(0,t.jsx)(n.h3,{id:"serviceaccount--identity",children:"ServiceAccount = Identity"}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"ServiceAccount"}),' is the identity of "who is accessing the resource?".']}),"\n",(0,t.jsx)(n.h3,{id:"role--role",children:"Role = Role"}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"Role"})," includes permissions to access the resources."]}),"\n",(0,t.jsx)(n.h3,{id:"rolebinding--role-binding",children:"RoleBinding = Role binding"}),"\n",(0,t.jsxs)(n.p,{children:["Links between the identity, which is the ",(0,t.jsx)(n.code,{children:"ServiceAccount"}),", to the permission defined in a ",(0,t.jsx)(n.code,{children:"Role"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["After submitting these definitions to the cluster, the application using that ",(0,t.jsx)(n.code,{children:"ServiceAccount"})," will be either allowed or denied to issue requests to the following endpoints:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"/api/v1/namespaces/{namespace}/services"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"/api/v1/namespaces/{namespace}/pods"})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"3-example",children:"3. Example"}),"\n",(0,t.jsx)(n.p,{children:"Here, we'll do everything from scratch."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Identifying and assigning ",(0,t.jsx)(n.strong,{children:"Identities"})]}),"\n",(0,t.jsxs)(n.li,{children:["Granting ",(0,t.jsx)(n.strong,{children:"permissions"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Linking"})," Identities to permissions"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Let's say someone on your ",(0,t.jsx)(n.strong,{children:"team"}),", want to login to the kubernetes Dashboard."]}),"\n",(0,t.jsx)(n.p,{children:"In this case, you should have and entity for an account of a user, where each user has a unique ID, such as an email address."}),"\n",(0,t.jsxs)(n.p,{children:["Now, how should you store the user in the cluster? Kubernetes doesn't have objects that represents user account. Users cannot be added through an API call. Instead, any actor representing a ",(0,t.jsx)(n.strong,{children:"valid certificate signed by the cluster's certificate authority"})," is considered authenticated. In this case, kubernetes assigns the the username from the Common Name field in the ",(0,t.jsx)(n.code,{children:"subject"})," of the certificate, like this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\n- cluster:\n    certificate-authority: /Users/talkohavy/.minikube/ca.crt\n    extensions:\n    - extension:\n        last-update: Sun, 22 Jun 2025 19:56:27 IDT\n        provider: minikube.sigs.k8s.io\n        version: v1.32.0\n      name: cluster_info\n    server: https://127.0.0.1:64693\n  name: minikube\ncontexts:\n- context:\n    cluster: minikube\n    extensions:\n    - extension:\n        last-update: Sun, 22 Jun 2025 19:56:27 IDT\n        provider: minikube.sigs.k8s.io\n        version: v1.32.0\n      name: context_info\n    namespace: default\n    user: minikube\n  name: minikube\ncurrent-context: minikube\nkind: Config\npreferences: {}\nusers:\n- name: minikube\n  user:\n    // highlight-start\n    client-certificate: /Users/talkohavy/.minikube/profiles/minikube/client.crt\n    // highlight-end\n    client-key: /Users/talkohavy/.minikube/profiles/minikube/client.key\n"})}),"\n",(0,t.jsxs)(n.p,{children:["We can extract the ",(0,t.jsx)(n.code,{children:"CN"})," like so"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"openssl x509 -in /Users/talkohavy/.minikube/profiles/minikube/client.crt -noout -subject\n"})}),"\n",(0,t.jsx)(n.p,{children:"Which outputs:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"subject=O=system:masters, CN=minikube-user\n"})}),"\n",(0,t.jsxs)(n.p,{children:["A temporary ",(0,t.jsx)(n.code,{children:"User"})," object is then created and passed to the ",(0,t.jsx)(n.strong,{children:"Authorization RBAC module"}),".",(0,t.jsx)(n.br,{}),"\n","Here is the code snippet from Kubernetes, which is a GoLang struct, that maps all the details collected from the ",(0,t.jsx)(n.strong,{children:"Authentication module"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:"type User struct {\n  name string     // unique for each user\n  // ...          // other details\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Just keep in mind, the ",(0,t.jsx)(n.code,{children:"User"})," is used for humans, or any external applications to the cluster."]}),"\n",(0,t.jsxs)(n.p,{children:["If you need to created an ",(0,t.jsx)(n.code,{children:"Identity"}),"that will be used ",(0,t.jsx)(n.em,{children:"inside"})," kubernetes, you should use a ",(0,t.jsx)(n.code,{children:"ServiceAccount"}),". It is very similar to the regular ",(0,t.jsx)(n.code,{children:"User"}),", except that it is managed by kubernetes itself."]}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"ServiceAccount"})," is usually assigned to ",(0,t.jsx)(n.code,{children:"Pods"})," to grant permissions."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, you may have Prometheus deployed inside your cluster, that needs to discover its targets. Or, perhaps an nginx ",(0,t.jsx)(n.code,{children:"IngressController"}),", that must have permissions to list all the backend endpoints for a service. For those apps, you can define a ",(0,t.jsx)(n.code,{children:"ServiceAccount"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"At this point, you have a mechanism to identify who has access, and to what resources. Whether it be a human, an application, or a group of one of them. But what resources they are accessing in the cluster?"}),"\n",(0,t.jsx)(n.h3,{id:"4-modeling-access-to-resources",children:"4. Modeling Access to Resources"}),"\n",(0,t.jsxs)(n.p,{children:["We want to create a ",(0,t.jsx)(n.code,{children:"Role"})," yaml."]}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"Role"})," yaml has 2 main keys, ",(0,t.jsx)(n.code,{children:"metadata"})," & ",(0,t.jsx)(n.code,{children:"rules"}),", which the latter is the most important one."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: viewer\n  namespace: application\nrules:\n  - apiGroups:\n      - ''\n    resources:\n      - services\n      - pods\n    verbs:\n      - get\n      - list\n  - apiGroups:\n      - 'apiextensions.k8s.io'\n    resources:\n      - customerResourceDefinition\n    verbs:\n      - list\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In kubernetes, a collection of ",(0,t.jsx)(n.code,{children:"apiGroups"}),", ",(0,t.jsx)(n.code,{children:"resources"}),", and ",(0,t.jsx)(n.code,{children:"verbs"})," is called a ",(0,t.jsx)(n.strong,{children:"rule"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"Role"})," can contain a list of ",(0,t.jsx)(n.strong,{children:"rules"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Now, all that's left is linking together ",(0,t.jsx)(n.strong,{children:"Roles"})," with ",(0,t.jsx)(n.strong,{children:"Identities"}),"."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"5-granting-permissions-to-users",children:"5. Granting Permissions to Users"}),"\n",(0,t.jsxs)(n.p,{children:["To link between a ",(0,t.jsx)(n.strong,{children:"Role"})," and an ",(0,t.jsx)(n.strong,{children:"Identity"})," we use a ",(0,t.jsx)(n.code,{children:"RoleBinding"})," resource."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: myapp-viewer\n  namespace: application\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: viewer\nsubjects:\n  - kind: ServiceAccount\n    name: myapp\n    namespace: application\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The above definition has 2 important fields: ",(0,t.jsx)(n.code,{children:"roleRef"})," & ",(0,t.jsx)(n.code,{children:"subjects"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"roleRef"})," references the ",(0,t.jsx)(n.em,{children:"viewer"})," ",(0,t.jsx)(n.code,{children:"Role"}),". ",(0,t.jsx)(n.code,{children:"subjects"})," links to the ",(0,t.jsx)(n.em,{children:"myapp"})," ",(0,t.jsx)(n.code,{children:"ServiceAccount"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Notice that both of them make the link on the ",(0,t.jsx)(n.code,{children:"name"})," key."]}),"\n",(0,t.jsxs)(n.p,{children:["Before submitting this ",(0,t.jsx)(n.code,{children:"RoleBinding"}),", ",(0,t.jsx)(n.em,{children:"any"})," service going through the ",(0,t.jsx)(n.strong,{children:"myapp"})," ",(0,t.jsx)(n.code,{children:"ServiceAccount"})]}),"\n",(0,t.jsxs)(n.p,{children:["As soon as you submit this ",(0,t.jsx)(n.code,{children:"RoleBinding"})," to the cluster, the application or user using the service account will have access to the resources listed in the ",(0,t.jsx)(n.code,{children:"Role"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},3546:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var i=s(9729);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);