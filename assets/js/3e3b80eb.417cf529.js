"use strict";(self.webpackChunkdocusaurus_guides=self.webpackChunkdocusaurus_guides||[]).push([[2397],{6839:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"programming/devops/helm/daily-workflow","title":"Helm Daily Workflow","description":"- A. list all your charts","source":"@site/docs/programming/devops/helm/daily-workflow.md","sourceDirName":"programming/devops/helm","slug":"/programming/devops/helm/daily-workflow","permalink":"/guides/docs/programming/devops/helm/daily-workflow","draft":false,"unlisted":false,"editUrl":"https://github.com/talkohavy/guides/docs/programming/devops/helm/daily-workflow.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mySidebar","previous":{"title":"- Deep Behind The Scenes","permalink":"/guides/docs/programming/devops/helm/deep-behind-the-scenes"},"next":{"title":"- All helm Commands","permalink":"/guides/docs/programming/devops/helm/helm-commands"}}');var n=a(5813),l=a(3546);const t={},i="Helm Daily Workflow",c={},o=[{value:"- A. list all your charts",id:"--a-list-all-your-charts",level:2},{value:"- B. Delete a deployment + service",id:"--b-delete-a-deployment--service",level:2},{value:"- C. Create a new chart-template with deployment+service for an app",id:"--c-create-a-new-chart-template-with-deploymentservice-for-an-app",level:2},{value:"- D. Provision a deployment+service for the first time",id:"--d-provision-a-deploymentservice-for-the-first-time",level:2},{value:"- E. Keep track of an installation progress",id:"--e-keep-track-of-an-installation-progress",level:2},{value:"- F. Upgrade (update) a chart&#39;s revision",id:"--f-upgrade-update-a-charts-revision",level:2},{value:"- G. Abort unsuccessful upgrade of a chart",id:"--g-abort-unsuccessful-upgrade-of-a-chart",level:2},{value:"- H. Decrypt a helm Secret",id:"--h-decrypt-a-helm-secret",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"helm-daily-workflow",children:"Helm Daily Workflow"})}),"\n",(0,n.jsx)(s.h2,{id:"--a-list-all-your-charts",children:"- A. list all your charts"}),"\n",(0,n.jsx)(s.p,{children:"You start out by listing all your charts with:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"helm ls\n"})}),"\n",(0,n.jsx)(s.h2,{id:"--b-delete-a-deployment--service",children:"- B. Delete a deployment + service"}),"\n",(0,n.jsx)(s.p,{children:"You can uninstall any of the listed charts using:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"helm uninstall CHART_NAME\n"})}),"\n",(0,n.jsx)(s.h2,{id:"--c-create-a-new-chart-template-with-deploymentservice-for-an-app",children:"- C. Create a new chart-template with deployment+service for an app"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"helm create CHART_NAME\n"})}),"\n",(0,n.jsx)(s.h2,{id:"--d-provision-a-deploymentservice-for-the-first-time",children:"- D. Provision a deployment+service for the first time"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"helm install CHART_NAME . --values values.yaml --debug --verify -n NAMESPACE --create-namespace\n"})}),"\n",(0,n.jsx)(s.p,{children:"Or by using force:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"helm install CHART_NAME . --values values.yaml --debug --verify -n NAMESPACE --create-namespace --force\n"})}),"\n",(0,n.jsx)(s.h2,{id:"--e-keep-track-of-an-installation-progress",children:"- E. Keep track of an installation progress"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"helm status CHART_NAME -n NAMESPACE\n"})}),"\n",(0,n.jsx)(s.h2,{id:"--f-upgrade-update-a-charts-revision",children:"- F. Upgrade (update) a chart's revision"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"helm upgrade CHART_NAME . --install --values values.yaml -n NAMESPACE --create-namespace\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Notice the ",(0,n.jsx)(s.code,{children:"--install"})," flag, which makes ",(0,n.jsx)(s.code,{children:"helm install"})," command redundant, since you now no longer need to decide between ",(0,n.jsx)(s.code,{children:"helm install"})," & ",(0,n.jsx)(s.code,{children:"helm upgrade"}),", just always use ",(0,n.jsx)(s.code,{children:"helm upgrade"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"--g-abort-unsuccessful-upgrade-of-a-chart",children:"- G. Abort unsuccessful upgrade of a chart"}),"\n",(0,n.jsxs)(s.p,{children:["When an upgrade is unsuccessful, and the ",(0,n.jsx)(s.code,{children:"rollingUpdate"})," seems to fail, you might need to abort the upgrade. Here's how you do it:"]}),"\n",(0,n.jsxs)(s.p,{children:["If you know the ",(0,n.jsx)(s.strong,{children:"revision number"})," of the current successful chart, simply ",(0,n.jsx)(s.strong,{children:"rollback"})," to it:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"helm rollback CHART_NAME REVISION_NUMBER -n NAMESPACE\n"})}),"\n",(0,n.jsxs)(s.p,{children:["If you need to check the current revision number, you can use the ",(0,n.jsx)(s.strong,{children:"history"})," command:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"helm history backend -n NAMESPACE\n"})}),"\n",(0,n.jsx)(s.h2,{id:"--h-decrypt-a-helm-secret",children:"- H. Decrypt a helm Secret"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"kubectl get secret sh.helm.release.v1.mysql-db-service.v1 -o jsonpath=\"{ .data.release }\" | base64 -d | base64 -d | gunzip -c | jq '.chart.templates[].data' | tr -d '\"' | base64 -d > hello.txt\n"})})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},3546:(e,s,a)=>{a.d(s,{R:()=>t,x:()=>i});var r=a(9729);const n={},l=r.createContext(n);function t(e){const s=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),r.createElement(l.Provider,{value:s},e.children)}}}]);